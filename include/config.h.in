/* include/config.h.in.  Generated from configure.ac by autoheader.  */

/* Directory with aload* device files */
#undef ALOAD_DEVICE_DIRECTORY

/* directory containing ALSA configuration database */
#undef ALSA_CONFIG_DIR

/* Enable assert at error message handler */
#undef ALSA_DEBUG_ASSERT

/* Directory with ALSA device files */
#undef ALSA_DEVICE_DIRECTORY

/* directory containing pkgconfig files */
#undef ALSA_PKGCONF_DIR

/* directory containing ALSA add-on modules */
#undef ALSA_PLUGIN_DIR

/* Build hwdep component */
#undef BUILD_HWDEP

/* Build mixer component */
#undef BUILD_MIXER

/* Build PCM component */
#undef BUILD_PCM

/* Build PCM adpcm plugin */
#undef BUILD_PCM_PLUGIN_ADPCM

/* Build PCM alaw plugin */
#undef BUILD_PCM_PLUGIN_ALAW

/* Build PCM lfloat plugin */
#undef BUILD_PCM_PLUGIN_LFLOAT

/* Build PCM mmap-emul plugin */
#undef BUILD_PCM_PLUGIN_MMAP_EMUL

/* Build PCM mulaw plugin */
#undef BUILD_PCM_PLUGIN_MULAW

/* Build PCM rate plugin */
#undef BUILD_PCM_PLUGIN_RATE

/* Build PCM route plugin */
#undef BUILD_PCM_PLUGIN_ROUTE

/* Build raw MIDI component */
#undef BUILD_RAWMIDI

/* Build sequencer component */
#undef BUILD_SEQ

/* Build DSP Topology component */
#undef BUILD_TOPOLOGY

/* Build UCM component */
#undef BUILD_UCM

/* Have clock gettime */
#undef HAVE_CLOCK_GETTIME

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define to 1 if you have the <endian.h> header file. */
#undef HAVE_ENDIAN_H

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Have libdl */
#undef HAVE_LIBDL

/* Have libpthread */
#undef HAVE_LIBPTHREAD

/* Define to 1 if you have the `resmgr' library (-lresmgr). */
#undef HAVE_LIBRESMGR

/* Have librt */
#undef HAVE_LIBRT

/* Define to 1 if you have the <minix/config.h> header file. */
#undef HAVE_MINIX_CONFIG_H

/* MMX technology is enabled */
#undef HAVE_MMX

/* Define if your pthreads implementation have PTHREAD_MUTEX_RECURSIVE */
#undef HAVE_PTHREAD_MUTEX_RECURSIVE

/* Avoid calculation in float */
#undef HAVE_SOFT_FLOAT

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdio.h> header file. */
#undef HAVE_STDIO_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/endian.h> header file. */
#undef HAVE_SYS_ENDIAN_H

/* Define to 1 if you have the <sys/shm.h> header file. */
#undef HAVE_SYS_SHM_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/time.h> header file. */
#undef HAVE_SYS_TIME_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if you have the `uselocale' function. */
#undef HAVE_USELOCALE

/* Define to 1 if you have the <wchar.h> header file. */
#undef HAVE_WCHAR_H

/* Enable use of wordexp */
#undef HAVE_WORDEXP

/* Define to 1 if compiler supports __thread */
#undef HAVE___THREAD

/* Lockless dmix as default */
#undef LOCKLESS_DMIX_DEFAULT

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#undef LT_OBJDIR

/* No assert debug */
#undef NDEBUG

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Max number of cards */
#undef SND_MAX_CARDS

/* Define to 1 if all of the C90 standard headers exist (not just the ones
   required in a freestanding environment). This macro is provided for
   backward compatibility; new code need not use it. */
#undef STDC_HEADERS

/* Support /dev/aload* access for auto-loading */
#undef SUPPORT_ALOAD

/* Support resmgr with alsa-lib */
#undef SUPPORT_RESMGR

/* Disable thread-safe API functions */
#undef THREAD_SAFE_API

/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. This
   macro is obsolete. */
#undef TIME_WITH_SYS_TIME

/* directory to put tmp socket files */
#undef TMPDIR

/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
/* Enable general extensions on macOS.  */
#ifndef _DARWIN_C_SOURCE
# undef _DARWIN_C_SOURCE
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# undef __EXTENSIONS__
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif
/* Enable X/Open compliant socket functions that do not require linking
   with -lxnet on HP-UX 11.11.  */
#ifndef _HPUX_ALT_XOPEN_SOCKET_API
# undef _HPUX_ALT_XOPEN_SOCKET_API
#endif
/* Identify the host operating system as Minix.
   This macro does not affect the system headers' behavior.
   A future release of Autoconf may stop defining this macro.  */
#ifndef _MINIX
# undef _MINIX
#endif
/* Enable general extensions on NetBSD.
   Enable NetBSD compatibility extensions on Minix.  */
#ifndef _NETBSD_SOURCE
# undef _NETBSD_SOURCE
#endif
/* Enable OpenBSD compatibility extensions on NetBSD.
   Oddly enough, this does nothing on OpenBSD.  */
#ifndef _OPENBSD_SOURCE
# undef _OPENBSD_SOURCE
#endif
/* Define to 1 if needed for POSIX-compatible behavior.  */
#ifndef _POSIX_SOURCE
# undef _POSIX_SOURCE
#endif
/* Define to 2 if needed for POSIX-compatible behavior.  */
#ifndef _POSIX_1_SOURCE
# undef _POSIX_1_SOURCE
#endif
/* Enable POSIX-compatible threading on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# undef _POSIX_PTHREAD_SEMANTICS
#endif
/* Enable extensions specified by ISO/IEC TS 18661-5:2014.  */
#ifndef __STDC_WANT_IEC_60559_ATTRIBS_EXT__
# undef __STDC_WANT_IEC_60559_ATTRIBS_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-1:2014.  */
#ifndef __STDC_WANT_IEC_60559_BFP_EXT__
# undef __STDC_WANT_IEC_60559_BFP_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-2:2015.  */
#ifndef __STDC_WANT_IEC_60559_DFP_EXT__
# undef __STDC_WANT_IEC_60559_DFP_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-4:2015.  */
#ifndef __STDC_WANT_IEC_60559_FUNCS_EXT__
# undef __STDC_WANT_IEC_60559_FUNCS_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-3:2015.  */
#ifndef __STDC_WANT_IEC_60559_TYPES_EXT__
# undef __STDC_WANT_IEC_60559_TYPES_EXT__
#endif
/* Enable extensions specified by ISO/IEC TR 24731-2:2010.  */
#ifndef __STDC_WANT_LIB_EXT2__
# undef __STDC_WANT_LIB_EXT2__
#endif
/* Enable extensions specified by ISO/IEC 24747:2009.  */
#ifndef __STDC_WANT_MATH_SPEC_FUNCS__
# undef __STDC_WANT_MATH_SPEC_FUNCS__
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# undef _TANDEM_SOURCE
#endif
/* Enable X/Open extensions.  Define to 500 only if necessary
   to make mbstate_t available.  */
#ifndef _XOPEN_SOURCE
# undef _XOPEN_SOURCE
#endif


/* sound library version string */
#undef VERSION

/* compiled with versioned symbols */
#undef VERSIONED_SYMBOLS

/* Toolchain Symbol Prefix */
#undef __SYMBOL_PREFIX

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif
